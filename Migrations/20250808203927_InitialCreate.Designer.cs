// <auto-generated />
using System;
using AssetMgmt.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetMgmt.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250808203927_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssetMgmt.Models.Asset", b =>
                {
                    b.Property<int>("AssetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetID"));

                    b.Property<string>("AssetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetTagNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustodianID")
                        .HasColumnType("int");

                    b.Property<int?>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("MajorCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssetID");

                    b.HasIndex("CustodianID");

                    b.HasIndex("LocationID");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("AssetMgmt.Models.AssetTransferLog", b =>
                {
                    b.Property<int>("TransferID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransferID"));

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<int?>("FromLocationID")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToLocationID")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransferredBy")
                        .HasColumnType("int");

                    b.HasKey("TransferID");

                    b.HasIndex("AssetID");

                    b.HasIndex("FromLocationID");

                    b.HasIndex("ToLocationID");

                    b.HasIndex("TransferredBy");

                    b.ToTable("AssetTransferLogs");
                });

            modelBuilder.Entity("AssetMgmt.Models.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"));

                    b.Property<string>("Building")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("AssetMgmt.Models.UserMaster", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("AssignedBuilding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignedFloor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignedRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("UserMasters");
                });

            modelBuilder.Entity("AssetMgmt.Models.Asset", b =>
                {
                    b.HasOne("AssetMgmt.Models.UserMaster", "Custodian")
                        .WithMany("CustodiedAssets")
                        .HasForeignKey("CustodianID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AssetMgmt.Models.Location", "Location")
                        .WithMany("Assets")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Custodian");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("AssetMgmt.Models.AssetTransferLog", b =>
                {
                    b.HasOne("AssetMgmt.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetMgmt.Models.Location", "FromLocation")
                        .WithMany()
                        .HasForeignKey("FromLocationID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AssetMgmt.Models.Location", "ToLocation")
                        .WithMany()
                        .HasForeignKey("ToLocationID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AssetMgmt.Models.UserMaster", "TransferredByUser")
                        .WithMany()
                        .HasForeignKey("TransferredBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("FromLocation");

                    b.Navigation("ToLocation");

                    b.Navigation("TransferredByUser");
                });

            modelBuilder.Entity("AssetMgmt.Models.Location", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetMgmt.Models.UserMaster", b =>
                {
                    b.Navigation("CustodiedAssets");
                });
#pragma warning restore 612, 618
        }
    }
}
